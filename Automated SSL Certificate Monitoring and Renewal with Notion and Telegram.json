{
  "name": "Automated SSL Certificate Monitoring and Renewal with Notion and Telegram",
  "nodes": [
    {
      "parameters": {
        "url": "=https://ssl-checker.io/api/v1/check/{{ $json.name }}",
        "options": {}
      },
      "id": "469d3992-ba1a-47c2-8400-73224b70425c",
      "name": "Check SSL",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1248,
        432
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e4af952e-e497-4d8e-a0fe-6d05c385bdd6",
              "operator": {
                "type": "number",
                "operation": "lt"
              },
              "leftValue": "={{ $('Refresh SSL Status').item.json.result.days_left }}",
              "rightValue": 14
            }
          ]
        },
        "options": {}
      },
      "id": "c84b355a-0f3a-4256-b835-28f1a2c08fbb",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        1680,
        432
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "returnAll": true,
        "options": {}
      },
      "id": "da422db5-a9cf-4977-b508-ec4d17f34c56",
      "name": "Get SSL Info",
      "type": "n8n-nodes-base.notion",
      "position": [
        1056,
        432
      ],
      "typeVersion": 2.2,
      "credentials": {
        "notionApi": {
          "id": "WQhm8trWu9rRUxC8",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  if (item.json.result.days_left < 14) {\n    item.json.ssl_status = \"It's about to expire.\";\n  } else if (item.json.result.days_left >= 14) {\n    item.json.ssl_status = \"Normal\";\n  } else {\n    item.json.ssl_status = \"Unavailable\";\n  }\n}\n\nreturn $input.all();"
      },
      "id": "806efbf8-9783-439e-8068-b59b86f41be8",
      "name": "Refresh SSL Status",
      "type": "n8n-nodes-base.code",
      "position": [
        1472,
        432
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "mode": "url",
          "value": "={{ $('Get SSL Info').item.json.url }}"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Creation Date|date",
              "includeTime": false,
              "date": "={{ $json.result.valid_from }}",
              "timezone": "Asia/Taipei"
            },
            {
              "key": "Expiration Date|date",
              "includeTime": false,
              "date": "={{ $json.result.valid_till }}",
              "timezone": "Asia/Taipei"
            },
            {
              "key": "SSL 狀態|select",
              "selectValue": "={{ $json.ssl_status }}"
            },
            {
              "key": "Last Check At|date",
              "date": "={{ $now.toString() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b82487c2-9070-4741-b8a3-d91595b52272",
      "name": "Update SSL Info",
      "type": "n8n-nodes-base.notion",
      "position": [
        2048,
        560
      ],
      "typeVersion": 2.2,
      "credentials": {
        "notionApi": {
          "id": "WQhm8trWu9rRUxC8",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var result = \"The certificates for the following domains are about to expire. Please confirm that they have been updated to avoid unexpected service downtime.：\\n\";\nvar index = 1;\n\nfor (const item of $('Refresh SSL Status').all()) {\n  if (item.json.result.days_left < 14) {\n    result += `${index}. ${item.json.host}：${item.json.result.days_left} days remaining.\\n`;\n    \n    index++;\n  }\n}\n\nresult += \"\\nThe instruction to update the credentials has been automatically triggered and the system will check again.\";\n\nreturn {output: result};"
      },
      "id": "8e721b47-ea70-462f-9bcd-7c7d82197c6e",
      "name": "Merge Content",
      "type": "n8n-nodes-base.code",
      "position": [
        2256,
        304
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks"
            }
          ]
        }
      },
      "id": "dbac84ed-cde7-4ec0-83ad-9f66b8c313d5",
      "name": "Weekly Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        368,
        432
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {},
      "id": "b6e10348-6364-4ba1-8770-d4451e88bc3a",
      "name": "When clicking ‘Execute workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "883b7a42-f6d8-43f2-b06b-9f7ced94a53c",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        2928,
        304
      ],
      "webhookId": "566cb4a9-c513-442f-97bc-ffb5ff01c904",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "273ad0c0-dc65-4e22-8248-2394cf9540b8",
              "operator": {
                "type": "array",
                "operation": "lengthNotEquals",
                "rightType": "number"
              },
              "leftValue": "={{ $('If').all() }}",
              "rightValue": "={{ $('Get SSL Info').all().length }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c4a69edf-680a-461e-ad07-b59b478a511d",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "position": [
        1872,
        544
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "43d2b787-83cf-46c0-9a7f-d96d9790c118",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        2048,
        304
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "b519c2ca-048a-4a53-97f3-d2c6fec2987e",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $('Select Who Triggered').first().json.triggerBy }}",
              "rightValue": "anotherWorkflow"
            }
          ]
        },
        "options": {}
      },
      "id": "69cdc9ee-aff1-4487-92ff-f025210a2c68",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "position": [
        2256,
        560
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "WO0anosBgPhhJ0Qi",
          "cachedResultName": "SSL Check Service"
        },
        "workflowInputs": {
          "value": {
            "has_expired_cert": true
          },
          "schema": [
            {
              "id": "has_expired_cert",
              "type": "boolean",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "has_expired_cert",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "has_expired_cert"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "id": "3084cc79-82ed-470b-bf13-bad763f1eb4f",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        3152,
        304
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "has_expired_cert",
              "type": "boolean"
            }
          ]
        }
      },
      "id": "323cf648-0ed5-4b0c-801f-ea088a8c969f",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        368,
        608
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ae06a67-600e-4efa-9eb1-da1bf83dc983",
              "name": "triggerBy",
              "type": "string",
              "value": "click"
            }
          ]
        },
        "options": {}
      },
      "id": "950d0d4f-7ec7-4fdf-a871-fdc2f6a695d6",
      "name": "Set Click Triggered",
      "type": "n8n-nodes-base.set",
      "position": [
        592,
        240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ae06a67-600e-4efa-9eb1-da1bf83dc983",
              "name": "triggerBy",
              "type": "string",
              "value": "weekly"
            }
          ]
        },
        "options": {}
      },
      "id": "ffe248fd-0a2e-4635-a749-8f982a5a5412",
      "name": "Set Weekly Triggered",
      "type": "n8n-nodes-base.set",
      "position": [
        592,
        432
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ae06a67-600e-4efa-9eb1-da1bf83dc983",
              "name": "triggerBy",
              "type": "string",
              "value": "anotherWorkflow"
            }
          ]
        },
        "options": {}
      },
      "id": "a1f5e319-1cff-4bb7-8911-d067095d1c6c",
      "name": "Set anotherWorkflow Triggered",
      "type": "n8n-nodes-base.set",
      "position": [
        592,
        608
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "758c172a-d289-4a1c-8e3d-1c4aaf643ff6",
      "name": "Select Who Triggered",
      "type": "n8n-nodes-base.merge",
      "position": [
        848,
        432
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "sudo certbot renew",
        "cwd": "/your/work//directory"
      },
      "id": "6b7db2a1-677a-4e24-93b7-baff9a2b60c2",
      "name": "Renew Server Cert",
      "type": "n8n-nodes-base.ssh",
      "position": [
        2720,
        304
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "text": "=\\[Notify] `{{ $workflow.name }}`\n{{ $json.output }}",
        "additionalFields": {}
      },
      "id": "caa30dca-a69e-499c-802b-e025ea8f4c10",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2496,
        304
      ],
      "webhookId": "82b65c71-8e83-427f-a18c-bf2a18f65385",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "f56JWU3a3U8yKb4l",
          "name": "Telegram VPS (https://t.me/RLVPS_bot)"
        }
      }
    },
    {
      "parameters": {
        "text": "=\\[Notify] `{{ $workflow.name }}`\nThe SSL certificate has been updated and all certificates are normal.",
        "additionalFields": {}
      },
      "id": "1853becf-ec46-47e2-b51e-c03f616e16ee",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2496,
        544
      ],
      "webhookId": "82b65c71-8e83-427f-a18c-bf2a18f65385",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "f56JWU3a3U8yKb4l",
          "name": "Telegram VPS (https://t.me/RLVPS_bot)"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Update SSL Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "Renew Server Cert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check SSL": {
      "main": [
        [
          {
            "node": "Refresh SSL Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get SSL Info": {
      "main": [
        [
          {
            "node": "Check SSL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Content": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weekly Trigger": {
      "main": [
        [
          {
            "node": "Set Weekly Triggered",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update SSL Info": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Renew Server Cert": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Refresh SSL Status": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Click Triggered": {
      "main": [
        [
          {
            "node": "Select Who Triggered",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Who Triggered": {
      "main": [
        [
          {
            "node": "Get SSL Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Weekly Triggered": {
      "main": [
        [
          {
            "node": "Select Who Triggered",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set anotherWorkflow Triggered": {
      "main": [
        [
          {
            "node": "Select Who Triggered",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Set anotherWorkflow Triggered",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Set Click Triggered",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "9de80e72-badd-4373-a2fe-b59d3b250c68",
  "meta": {
    "templateId": "4973",
    "instanceId": "4f0f3f4adadd997b55deff138d2b3a2a0797a41bd46dbb5981afcf8c65db5846"
  },
  "id": "CDLc7PdRiUVU9ypQ",
  "tags": []
}